import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import React from 'react';
import Card from '../components/Card';
import { useRouter } from 'next/router';
import { useEffect } from 'react';


function Home() {
  const [newPrompt, setPrompt] = React.useState();
  const [results, setResults] = React.useState({text: ''});
  const [isLoading, setIsLoading] = React.useState(false);
  const [cardList, setCardList] = React.useState([]);

  const updatePrompt = e => setPrompt(e.target.value);

  useEffect(() => {
    const fetchData = async () => {
      if(newPrompt){
        setIsLoading(true);
        const res = await fetch("/api/gpt3", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${process.env.OPENAI_SECRET}`,
          },
          body: JSON.stringify({
            prompt: newPrompt,
          }),
        });
        const data = await res.json();
        setResults(data);
        setIsLoading(false);
      }};

    fetchData();
  }, [newPrompt]);

  function handleSubmit(e) {
    e.preventDefault();
    setCardList(cardList.concat([[newPrompt, results.text]]));
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Fun with GPT-3
        </h1>

        <form className={styles.form} onSubmit={handleSubmit}>
          <h3 type="prompt_text">Enter prompt</h3>
          <textarea 
              contentEditable={true}
              onChange={updatePrompt}
              value={newPrompt}
              suppressContentEditableWarning={true}
              placeholder="Enter your prompt..." 
              type="text" id="prompt" name="prompt" 
              size="50" required />
          <button type="submit">Submit</button>
        </form>

        {/* {isLoading ? (<div>Loading...</div>) : 
          (<p>
            {results.text}
          </p>)} */}

        {cardList.length > 0 ? (
          <div className={styles.cardList}>
            <h2 className={styles.cardListTitle}>Responses</h2>
            {cardList.map((card) =>(
              <Card key={card[0]} prompt={card[0]} answer={card[1]} />
            )).reverse()}
          </div>) : (<div><h2 className={styles.cardListTitle}>No prompts generated yet</h2></div>)}
      </main>
    </div>
  )
}

export default Home;